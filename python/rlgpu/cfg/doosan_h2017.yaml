env:
  wandb_project: rl_h2017
  num_envs: 64
  env_spacing: 2
  episode_length: 500 # might have to be larger
  enable_debug_vis: True

  start_position_noise: 0.0 # for the work object
  start_rotation_noise: 0.0 # for the work object

  # observation dimensions
  num_obst: 1 # number of obstacles in the environment
  num_dofs: 6 # number of dof of the robot
  num_actions: 6
  goal_representation: 7 # state representation of end-effector pose, 3 for position and 7 if quaternion are included
  error_representation: 4 # state representation of distance to goal, 1 if just distance, 3 if orientation, 4 for both

  # curriculum
  curr_modus: 2 # which type of curriculum, spherical = 0, torus = 1
  curr_level: 0 # which curriculum level it starts with, range of 0-4
  num_curr_level: 5 # it is only necessary to specify the value for currModus 0 and 1

  # weight for rewards are taken from arxiv.org/pdf/2011.06332v1.pdf
  distance_reward_scale: -20.0 # 20.0 from paper
  obstacle_reward_scale: 0.1 # from paper
  obstacle_maximum_distance: 0.05 # =  5 centimeters from paper
  success_tolerance: 0.01 # = 1 centimeters from paper
  reach_goal_bonus: 250 # from shadow_hand should maybe be scaled differently

robot: # specific to the robot itself
  control_type: 1 # how to actuate the joints, position = 0, velocity = 1
  action_scale: 7.5 # values of 5 and 10 seemed to perform worse
  dof_vel_scale: 0.1 # the value is a multiplier (ant uses 0.2) (humanoid uses 0.25 for angular velocity)

  dof_stiffness: [100, 100, 100, 100, 100, 100] # probably not accurate
  dof_damping: [100, 100, 100, 100, 100, 100] # probably not accurate
  dof_vel_lower_limits: [-100, -80, -100, -180, -180, -180]
  dof_vel_upper_limits: [100, 80, 100, 180, 180, 180]

  # obstacle avoidance
  obst_size: 0.08 # 8 centimeters radius
  link_safety_dist: [0.0, 0.0, 0.0, 0.1125, 0.075, 0.09, 0.06, 0.0] # should be changed for doosan

  # spherical curriculum
  spher_radius_low: [1.2, 1.1, 1.0, 1.0, 0.8] # values in metres
  spher_radius_up: [1.4, 1.4, 1.4, 1.4, 1.4] # values in metres
  spher_theta_low: [60, 60, 45, 22.5, 22.5] # values in degrees
  spher_theta_up: [45, 90, 90, 90, 90] # values in degrees
  spher_phi_low: [0.0, 0.0, 0.0, 0.0, 0.0] # values in degrees
  spher_phi_up: [45, 60, 60, 90, 180] # values in degrees

  # torus curriculum # HAVE NOT BEEN TESTED
  torus_major_radius: [0.45] # values in metres
  torus_minor_radius_low: [0.0, 0.0, 0.0, 0.0, 0.0] # values in metres
  torus_minor_radius_up: [0.15, 0.20, 0.30, 0.30, 0.30] # values in metres
  torus_theta_low: [0.0, 0.0, 0.0, 0.0, 0.0] # values in degrees
  torus_theta_up: [360, 360, 360, 360, 360] # values in degrees
  torus_phi_low: [0.0, 0.0, 0.0, 0.0, 0.0] # values in degrees
  torus_phi_up: [45, 60, 60, 90, 180] # values in degrees

  # self generated curriculum
  workspace_size: 1.6 # values in metres - taken from datasheet
  curriculum_sizes: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6] # values in metres

sim:
  dt: 0.1 # franka uses 0.01 as default
  substeps: 1 # using 2 substeps sometimes is required for better interactions where collision, but 1 is faster
  physx:
    num_threads: 4
    solver_type: 1 # 0: Projected Gauss-Seidel, 1: Temporal Gauss-Seidel
    num_position_iterations: 8
    num_velocity_iterations: 0
    contact_offset: 0.005
    rest_offset: 0.0
    bounce_threshold_velocity: 0.5
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
    always_use_articulations: False

task:
  randomize: False
